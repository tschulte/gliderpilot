<?xml version="1.0" encoding="UTF-8"?>
<project name="Gliderpilot" default="build" basedir=".">
  <!--
    all build artefacts are deposited under this directory.
  -->
  <property name="build.dir" value="${basedir}/build"/>

  <!--
    classes generated by the javac compiler are deposited in this
    directory.
  -->
  <property name="build.classes.dir" value="${build.dir}/classes"/>
  
  <property name="build.junit.classes.dir" value="${build.dir}/JUnit-classes"/>

  <!--
    instrumented classes are deposited into this directory.
  -->
  <property name="build.instrumented.dir" value="${build.dir}/instrumented-classes"/>

  <!--
    coverage reports are deposited into this directory. For the
    HTML report, look at ${build.coverage.dir}/index.html. For the XML
    report look at ${build.coverage.dir}/coverage.xml.
  -->
  <property name="build.coverage.dir" value="${build.dir}/JCoverage-reports"/>
  
  <!--
    unit test reports from junit are deposited in this directory.
  -->
  <property name="build.reports.dir" value="${build.dir}/JUnit-reports"/>

  <!--
    the source code can be found in this directory.
  -->
  <property name="src.dir" value="${basedir}/src/app"/>
  <property name="src.junit.dir" value="${basedir}/src/JUnit"/>

	<property name="lib.dir" value="${basedir}/lib"/>

  <path id="lib.junit">
    <fileset dir="${lib.dir}">
      <include name="junit/*.jar"/>
    </fileset>
  </path>

  <path id="lib.log4j">
    <fileset dir="${lib.dir}">
      <include name="log4j/*.jar"/>
    </fileset>
  </path>

  <path id="lib.jcoverage">
    <fileset dir="${lib.dir}">
      <include name="jcoverage/*.jar"/>
    </fileset>
    <fileset dir="${lib.dir}">
      <include name="log4j/*.jar"/>
    </fileset>
  </path>
	<taskdef classpathref="lib.jcoverage" resource="tasks.properties"/>


  <target name="clean" description="clean up build artefacts">
    <delete quiet="true">
      <fileset dir="${build.dir}"/>
      <fileset dir="${basedir}">
        <include name="jcoverage.ser"/>
        <include name="jcoverage.log"/>
      </fileset>
    </delete>
  </target>

  <target name="init" description="create build directories">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.classes.dir}"/>
    <mkdir dir="${build.junit.classes.dir}"/>
    <mkdir dir="${build.coverage.dir}"/>
    <mkdir dir="${build.instrumented.dir}"/>
    <mkdir dir="${build.reports.dir}"/>
  </target>

  <target name="build" description="compile all classes">
    <javac srcdir="${src.dir}" destdir="${build.classes.dir}" failonerror="yes" debug="yes">
    </javac>
    <javac srcdir="${src.junit.dir}" destdir="${build.junit.classes.dir}" failonerror="yes" debug="yes">
      <classpath>
      	<path refid="lib.junit"/>
      	<dirset dir="${build.classes.dir}"/>
      </classpath>
    </javac>
  </target>

  <target name="instrument" description="Add jcoverage instrumentation">
    <!--
      instrument the application classes, writing the instrumented
      classes into ${build.instrumented.dir}.
    -->
    <instrument todir="${build.instrumented.dir}">
      <!--
        Note that the following line causes instrument to ignore any
        source line containing a reference to log4j, for the purposes
        of coverage reporting.
      -->
      <ignore regex="org.apache.log4j.*"/>

      <fileset dir="${build.classes.dir}">
        <!--
          instrument all the application classes, but don't instrument
          the test classes.
        -->
        <include name="**/*.class"/>
        <exclude name="**/*Test.class"/>
      </fileset>
    </instrument>
  </target>

  <target name="test" description="Unit test the application">
    <junit fork="yes" dir="${basedir}" errorProperty="test.failed" failureProperty="test.failed">
      <!--
        note the classpath order, instrumented classes are before the
        original (uninstrumented) classes.
      -->
      <classpath location="${build.instrumented.dir}"/>
      <classpath location="${build.classes.dir}"/>
      <classpath location="${build.junit.classes.dir}"/>

      <!--
        the instrumented classes reference classes used by the
        jcoverage runtime.
      -->
      <classpath refid="lib.jcoverage"/>
      <classpath refid="lib.junit"/>
<!--      <formatter type="xml"/>-->

      <batchtest todir="${build.reports.dir}">
        <fileset dir="${src.junit.dir}">
          <include name="**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="coverage" description="HTML and XML coverage reports can be found in build/coverage">
    <report srcdir="${src.dir}" destdir="${build.coverage.dir}"/>
    <report srcdir="${src.dir}" destdir="${build.coverage.dir}" format="xml"/>

    <echo>
jcoverage reports have been generated.
The HTML report is ${build.coverage.dir}/index.html
The XML report is ${build.coverage.dir}/coverage.xml
    </echo>
  </target>

</project>
